<Project Sdk="MSTest.Sdk/3.6.0">
  <PropertyGroup>
    <TargetFrameworks>net6.0</TargetFrameworks>
    <TargetFrameworks Condition="'$(BuildNet7)' == 'true'">$(TargetFrameworks);net7.0</TargetFrameworks>
    <!-- MSTest SDK and CPM don't play nicely -->
    <CentralPackageVersionOverrideEnabled>true</CentralPackageVersionOverrideEnabled>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="FileUtils.fs" />
    <Compile Include="MSTestLogger.fs" />
    <Compile Include="TestAssets.fs" />
    <Compile Include="Tests.fs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\Ionide.ProjInfo\Ionide.ProjInfo.fsproj" />
    <ProjectReference Include="..\..\src\Ionide.ProjInfo.FCS\Ionide.ProjInfo.FCS.fsproj" />
    <ProjectReference
      Include="..\..\src\Ionide.ProjInfo.ProjectSystem\Ionide.ProjInfo.ProjectSystem.fsproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="MedallionShell" />
    <PackageReference Include="Microsoft.Extensions.Logging" />
  </ItemGroup>

  <!-- This is a workaround for the test framework using Microsoft.Build dependencies and our
  project uses it's own set of Microsoft.Build dependencies which causes loading conflicts -->
  <Target
    Name="PostBuild"
    AfterTargets="PostBuildEvent">
    <Copy
      SourceFiles="$([System.IO.Directory]::GetParent($(BundledRuntimeIdentifierGraphFile)))\NuGet.Frameworks.dll"
      DestinationFolder="$(OutputPath)"
      ContinueOnError="false" />
  </Target>
</Project>

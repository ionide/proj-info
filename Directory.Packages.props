<Project>
  <PropertyGroup>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <DisableImplicitLibraryPacksFolder>true</DisableImplicitLibraryPacksFolder>
    <MicrosoftBuildPackageVersion>17.2</MicrosoftBuildPackageVersion>
    <!-- We want to try to target the lowest F# Core version we can-->
    <FSharpCoreVersion>6.0.0</FSharpCoreVersion>
    <!-- However for the FCS project, FSharpCoreCompilerVersion needs to match whats specified in
    the FSharp.Compiler.Service dependency -->
    <FSharpCoreCompilerVersion>9.0.100</FSharpCoreCompilerVersion>
    <FSharpCompilerVersion>43.9.100</FSharpCompilerVersion>
    <ExpectoVersion>10.2.1</ExpectoVersion>
    <FakeVersion>6.1.3</FakeVersion>
    <NuGetAuditMode>direct</NuGetAuditMode>
  </PropertyGroup>
  <ItemGroup>
    <!-- Packaging Dependencies -->
    <PackageVersion Include="Dotnet.ReproducibleBuilds" Version="1.2.25" PrivateAssets="All" />
    <PackageVersion Include="Ionide.KeepAChangelog.Tasks" Version="0.1.8" PrivateAssets="All" />
    <!-- Main Project Dependencies -->
    <PackageVersion Include="FSharp.Core" Version="$(FSharpCoreVersion)" />
    <PackageVersion Include="FSharp.Compiler.Service" Version="$(FSharpCompilerVersion)" />
    <PackageVersion Include="SemanticVersioning" Version="2.0.2" />
    <PackageVersion Include="Fsharp.Control.Reactive" Version="5.0.5" />
    <PackageVersion Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageVersion Include="Argu" Version="6.2.4" />
    <!-- Solution-parser library. Important question: since this is also usable my MSbuild, is it subject to the same PrivateAssets stuff? -->
    <PackageVersion Include="Microsoft.VisualStudio.SolutionPersistence" Version="1.0.28" />
    <!-- MSBuild dependency - important: this should always be ExcludeAssets="runtime", and it
    should be kept low based
      on the SDK versions we want to support. See https://aka.ms/dotnet/matrixofpaine for version
    details.  -->
    <PackageVersion Include="Microsoft.Build" Version="$(MicrosoftBuildPackageVersion)" PrivateAssets="All" />
    <PackageVersion Include="Microsoft.Build.Framework" Version="$(MicrosoftBuildPackageVersion)" PrivateAssets="All" />
    <PackageVersion Include="Microsoft.Build.Utilities.Core" Version="$(MicrosoftBuildPackageVersion)" PrivateAssets="All" />
    <PackageVersion Include="Microsoft.Build.Tasks.Core" Version="$(MicrosoftBuildPackageVersion)" PrivateAssets="All" />
    <!-- Test Project Dependencies -->
    <PackageVersion Include="Expecto" Version="$(ExpectoVersion)" />
    <PackageVersion Include="Expecto.Diff" Version="$(ExpectoVersion)" />
    <PackageVersion Include="MedallionShell" Version="1.5.1" />
    <PackageVersion Include="YoloDev.Expecto.TestSdk" Version="0.14.3" />
    <PackageVersion Include="Microsoft.NET.Test.Sdk" Version="17.11.1" />
    <PackageVersion Include="GitHubActionsTestLogger" Version="2.4.1" />
    <!-- Build Dependencies-->
    <PackageVersion Include="Fake.Core.Target" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.Core.Process" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.DotNet.Cli" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.Core.ReleaseNotes" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.DotNet.AssemblyInfoFile" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.DotNet.Paket" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.Tools.Git" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.Core.Environment" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.Core.UserInput" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.IO.FileSystem" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.DotNet.MsBuild" Version="$(FakeVersion)" />
    <PackageVersion Include="Fake.Api.GitHub" Version="$(FakeVersion)" />
  </ItemGroup>
</Project>
